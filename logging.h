#define LOGFATAL   0x01
#define LOGERROR   0x02
#define LOGWARN    0x04
#define LOGTEST    0x08
#define LOGINFO    0x10
#define LOGDEBUG   0x20
#define LOGTRACE   0x40
#define LOGMINUTIA 0x80

#define B64P "%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c(%lu)"
#define I64TOB(num) \
  (num & 0x8000000000000000 ? '1' : '0'), \
  (num & 0x4000000000000000 ? '1' : '0'), \
  (num & 0x2000000000000000 ? '1' : '0'), \
  (num & 0x1000000000000000 ? '1' : '0'), \
  (num & 0x0800000000000000 ? '1' : '0'), \
  (num & 0x0400000000000000 ? '1' : '0'), \
  (num & 0x0200000000000000 ? '1' : '0'), \
  (num & 0x0100000000000000 ? '1' : '0'), \
  (num & 0x0080000000000000 ? '1' : '0'), \
  (num & 0x0040000000000000 ? '1' : '0'), \
  (num & 0x0020000000000000 ? '1' : '0'), \
  (num & 0x0010000000000000 ? '1' : '0'), \
  (num & 0x0008000000000000 ? '1' : '0'), \
  (num & 0x0004000000000000 ? '1' : '0'), \
  (num & 0x0002000000000000 ? '1' : '0'), \
  (num & 0x0001000000000000 ? '1' : '0'), \
  (num & 0x0000800000000000 ? '1' : '0'), \
  (num & 0x0000400000000000 ? '1' : '0'), \
  (num & 0x0000200000000000 ? '1' : '0'), \
  (num & 0x0000100000000000 ? '1' : '0'), \
  (num & 0x0000080000000000 ? '1' : '0'), \
  (num & 0x0000040000000000 ? '1' : '0'), \
  (num & 0x0000020000000000 ? '1' : '0'), \
  (num & 0x0000010000000000 ? '1' : '0'), \
  (num & 0x0000008000000000 ? '1' : '0'), \
  (num & 0x0000004000000000 ? '1' : '0'), \
  (num & 0x0000002000000000 ? '1' : '0'), \
  (num & 0x0000001000000000 ? '1' : '0'), \
  (num & 0x0000000800000000 ? '1' : '0'), \
  (num & 0x0000000400000000 ? '1' : '0'), \
  (num & 0x0000000200000000 ? '1' : '0'), \
  (num & 0x0000000100000000 ? '1' : '0'), \
  (num & 0x0000000080000000 ? '1' : '0'), \
  (num & 0x0000000040000000 ? '1' : '0'), \
  (num & 0x0000000020000000 ? '1' : '0'), \
  (num & 0x0000000010000000 ? '1' : '0'), \
  (num & 0x0000000008000000 ? '1' : '0'), \
  (num & 0x0000000004000000 ? '1' : '0'), \
  (num & 0x0000000002000000 ? '1' : '0'), \
  (num & 0x0000000001000000 ? '1' : '0'), \
  (num & 0x0000000000800000 ? '1' : '0'), \
  (num & 0x0000000000400000 ? '1' : '0'), \
  (num & 0x0000000000200000 ? '1' : '0'), \
  (num & 0x0000000000100000 ? '1' : '0'), \
  (num & 0x0000000000080000 ? '1' : '0'), \
  (num & 0x0000000000040000 ? '1' : '0'), \
  (num & 0x0000000000020000 ? '1' : '0'), \
  (num & 0x0000000000010000 ? '1' : '0'), \
  (num & 0x0000000000008000 ? '1' : '0'), \
  (num & 0x0000000000004000 ? '1' : '0'), \
  (num & 0x0000000000002000 ? '1' : '0'), \
  (num & 0x0000000000001000 ? '1' : '0'), \
  (num & 0x0000000000000800 ? '1' : '0'), \
  (num & 0x0000000000000400 ? '1' : '0'), \
  (num & 0x0000000000000200 ? '1' : '0'), \
  (num & 0x0000000000000100 ? '1' : '0'), \
  (num & 0x0000000000000080 ? '1' : '0'), \
  (num & 0x0000000000000040 ? '1' : '0'), \
  (num & 0x0000000000000020 ? '1' : '0'), \
  (num & 0x0000000000000010 ? '1' : '0'), \
  (num & 0x0000000000000008 ? '1' : '0'), \
  (num & 0x0000000000000004 ? '1' : '0'), \
  (num & 0x0000000000000002 ? '1' : '0'), \
  (num & 0x0000000000000001 ? '1' : '0'), \
  num

#include <stdarg.h>

extern unsigned int LOGLEVEL;

void logFatal(const char *format, ...);
void logError(const char *format, ...);
void logWarn(const char *format, ...);
void logTest(const char *format, ...);
void logInfo(const char *format, ...);
void logDebug(const char *format, ...);
void logTrace(const char *format, ...);
void logMinutia(const char *format, ...);

void setLogLevelByName(const char *name);

